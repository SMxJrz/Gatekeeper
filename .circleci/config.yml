# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Run Tests and Build Backend Services
          command: |
            pushd services
            mvn clean package
      - run:
          name: Save Tests
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            ls -ltr ~/junit
      - store_test_results:
          path: ~/junit
      - save_cache:
          key: gk-ec2-{{ .Branch }}-{{ epoch }}
          paths:
              - services/ec2/*.jar
      - save_cache:
          key: gk-rds-{{ .Branch }}-{{ epoch }}
          paths:
              - services/rds/*.jar
  build_ui:
    docker:
      - image: circleci/node:10-stretch-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "ui/package.json" }}
              - v1-dependencies-
      - run:
          name: Install Dependencies
          command: |
            pushd ui
            npm install --verbose
      - save_cache:
          key: v1-dependencies-{{ checksum "ui/package.json" }}
          paths:
              - ui/node_modules
      - run:
          name: Run Tests
          command: |
            pushd ui
            npm run test
      - run:
          name: Save-Tests
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/test/junit/.*xml" -exec cp {} ~/junit/ \;
      - run:
          name: Build Application
          command: |
            pushd ui
            npm run build
      - save_cache:
          key: gk-ui-{{ .Branch }}-{{ epoch }}
          paths:
              - ui/dist/*
      - store_test_results:
          path: ~/junit
  build_docker:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - gk_cntnr_base_v1-{{ .Branch }}
          paths:
            - /caches/nginx.tar
            - /caches/java.tar
            - /caches/base.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/base.tar | true
            docker load -i /caches/java.tar | true
            docker load -i /caches/nginx.tar | true
      - run:
          name: Build Base Container
          command: |
            cd containers
            cd base
            docker build --cache-from gatekeeper/base -t gatekeeper/base ./
      - run:
          name: Build Java Container
          command: |
            docker images
            cd containers
            cd java
            docker build --cache-from gatekeeper/java -t gatekeeper/java ./
      - run:
          name: Build Nginx Container
          command: |
            cd containers
            cd nginx
            docker build --cache-from gatekeeper/nginx -t gatekeeper/nginx ./
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/base.tar gatekeeper/base
            docker save -o /caches/nginx.tar gatekeeper/nginx
            docker save -o /caches/java.tar gatekeeper/java
      - save_cache:
          key: gk_cntnr_base_v1-{{ .Branch }}-{{ checksum "caches/base.tar.json" }}{{ checksum "caches/java.tar.json" }}{{ checksum "caches/nginx.tar.json" }}
          paths:
            - /caches/nginx.tar
            - /caches/java.tar
            - /caches/base.tar
  build_and_push_ui:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - gk_cntnr_base_v1-{{ .Branch }}
          paths:
            - /caches/nginx.tar
      - restore_cache:
          keys:
            - gk-ui-{{ .Branch }}
          paths:
            - /ui/dist/*
      - run:
          name: Load Docker image + stage UI code
          command: |
            set +o pipefail
            docker load -i /caches/nginx.tar | true
      - run:
          name: Build Gatekeeper UI Container
          command: |
            cd ui
            ls -ltr
            ls -ltr dist
            docker build -t gatekeeper/ui ./
            docker images
  build_and_push_rds:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - gk_cntnr_base_v1-{{ .Branch }}
          paths:
            - /caches/java.tar
      - restore_cache:
          keys:
            - gk-rds-{{ .Branch }}
          paths:
            - /services/rds/*.jar
      - run:
          name: Load Docker image + stage UI code
          command: |
            set +o pipefail
            docker load -i /caches/java.tar | true
      - run:
          name: Build Gatekeeper RDS Service Container
          command: |
            cd services/rds
            docker build -t gatekeeper/rds ./
            docker images
  build_and_push_ec2:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - gk_cntnr_base_v1-{{ .Branch }}
          paths:
            - /caches/java.tar
      - restore_cache:
          keys:
            - gk-ec2-{{ .Branch }}
          paths:
            - /services/ec2/*.jar
      - run:
          name: Load Docker image + stage UI code
          command: |
            set +o pipefail
            docker load -i /caches/java.tar | true
      - run:
          name: Build Gatekeeper EC2 Service Container
          command: |
            cd services/ec2
            docker build -t gatekeeper/ec2 ./
            docker images
workflows:
  version: 2
  build_services_and_ui:
    jobs:
      - build
      - build_ui
      - build_docker
      - build_and_push_ui:
          requires:
            - build_ui
            - build_docker
      - build_and_push_rds:
          requires:
            - build
            - build_docker
      - build_and_push_ec2:
          requires:
            - build
            - build_docker

