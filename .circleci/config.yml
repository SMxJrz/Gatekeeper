# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Run Tests and Build Backend Services
          command: |
            pushd services
            mvn clean package
      - run:
          name: Save Tests
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            ls -ltr ~/junit
      - store_test_results:
          path: ~/junit
  build_ui:
    docker:
      - image: circleci/node:10-stretch-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "ui/package.json" }}
              - v1-dependencies-
      - run:
          name: Install Dependencies
          command: |
            pushd ui
            npm install --verbose
      - save_cache:
          key: v1-dependencies-{{ checksum "ui/package.json" }}
          paths:
              - ui/node_modules
      - run:
          name: Run Tests
          command: |
            pushd ui
            npm run test
      - run:
          name: Save-Tests
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/test/junit/.*xml" -exec cp {} ~/junit/ \;
      - run:
          name: Build Application
          command: |
            pushd ui
            npm run build
      - store_test_results:
          path: ~/junit
  build_docker:
    working_directory: /repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/nginx.tar
            - /caches/java.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/java.tar | true
            docker load -i /caches/nginx.tar | true
      - run:
          name: Build Containers
          command: |
            cd containers
            docker-compose build
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/nginx.tar gatekeeper/nginx
            docker save -o /caches/java.tar gatekeeper/java
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/nginx.tar
            - /caches/java.tar
#      - run:
#          name: Run tests
#          command: |
#            docker-compose -f ./docker-compose.test.yml up
#      - deploy:
#          name: Push application Docker image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              login="$(aws ecr get-login)"
#              ${login}
#              docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#              docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#            fi
workflows:
  version: 2
  build_services_and_ui:
    jobs:
      - build
      - build_ui
      - build_docker
